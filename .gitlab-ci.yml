image: microsoft/dotnet:latest
stages:
  - qa
  - build
  - test
  - deploy
  
codequality_preview:
  stage: qa
  script:
    - wget https://github-production-release-asset-2e65be.s3.amazonaws.com/34444711/ab260b80-d092-11e8-8f2c-167cffaf4f47?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20181128%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20181128T091435Z&X-Amz-Expires=300&X-Amz-Signature=b71293727a14514557688ef6b73ca6cd566241cd3266093609f64645b629117a&X-Amz-SignedHeaders=host&actor_id=43195913&response-content-disposition=attachment%3B%20filename%3Dsonar-scanner-msbuild-4.4.2.1543-net46.zip&response-content-type=application%2Foctet-stream
    - ls
    - dotnet tool install --global dotnet-sonarscanner --version 4.3.1
    - export PATH="$PATH:/root/.dotnet/tools"
    - SonarQube.Scanner.MSBuild.exe begin /k:"abt123" /d:sonar.host.url="http://35.243.200.50:9000" /d:sonar.login="77489d36e668cf8f4f0ca42f9c1131d98a8fd604"
    - MsBuild.exe /t:Rebuild
    - SonarQube.Scanner.MSBuild.exe end /d:sonar.login="77489d36e668cf8f4f0ca42f9c1131d98a8fd604"




deploy:
  stage: deploy
  only:
    - master
  artifacts:
    paths:
      - publish/
  script:
    # The output path is relative to the position of the csproj-file
    - dotnet publish -c Release -o ../publish MyProject/MyProject.csproj
    
test:
  stage: test
  script:
    - dotnet test MyProject.Test/MyProject.Test.csproj

build:
  stage: build
  script:
    - dotnet build MyProject.Test/MyProject.Test.csproj
    
    
 