image: microsoft/dotnet:latest
ENV SONAR_URL="http://35.243.200.50:9000"
ENV SONAR_TOKEN="77489d36e668cf8f4f0ca42f9c1131d98a8fd604"
ENV SONAR_PROJECT_KEY="abt123"
ENV PATH="${PATH}:/root/.dotnet/tools"


stages:
  - qa
  - build
  - test
  - deploy
  
codequality_preview:
  stage: qa
  script:
    - dotnet tool install --global dotnet-sonarscanner --version 4.3.1
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="/TestResults/" --verbosity=normal --results-directory /TestResults/ --logger "trx;LogFileName=test_results.trx" ./Tests/Tests.csproj
    - dotnet sonarscanner begin /k:${SONAR_PROJECT_KEY} /d:sonar.host.url=${SONAR_URL} /d:sonar.login=${SONAR_TOKEN} /d:sonar.verbose=true /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.opencover.xml" /d:sonar.coverage.exclusions="**Tests*.cs,**Integration*.cs"
    - dotnet publish MyProject.sln -o /publish/
    - dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}




deploy:
  stage: deploy
  only:
    - master
  artifacts:
    paths:
      - publish/
  script:
    # The output path is relative to the position of the csproj-file
    - dotnet publish -c Release -o ../publish MyProject/MyProject.csproj
    
test:
  stage: test
  script:
    - dotnet test MyProject.Test/MyProject.Test.csproj

build:
  stage: build
  script:
    - dotnet build MyProject.Test/MyProject.Test.csproj
    
    
 